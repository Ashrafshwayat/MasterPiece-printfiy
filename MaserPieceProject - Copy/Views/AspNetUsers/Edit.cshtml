@model MaserPieceProject.Models.AspNetUser

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>AspNetUser</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.EmailConfirmed)
                        @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.PhoneNumberConfirmed)
                        @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.TwoFactorEnabled)
                        @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.LockoutEnabled)
                        @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fullName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@



@using (Html.BeginForm("Edit","AspNetUsers" ,FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <section style="background-color: #eee;">
        <div class="container py-5">
            <div class="row">
                <div class="col">
                    <nav aria-label="breadcrumb" class="bg-light rounded-3 p-3 mb-4">
                        <ol class="breadcrumb mb-0">
                      
                            <li class="breadcrumb-item active" aria-current="page">Edit User Profile</li>
                        </ol>
                    </nav>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-4">
                    <div class="card mb-4">
                        <div class="card-body text-center">
                            <img src="~/images/@Model.Photo" alt="avatar"
                                 class="rounded-circle img-fluid" style="width: 150px;">
                            <h5 class="my-3"> @Html.DisplayFor(model => model.fullName)</h5>
                            <p class="text-muted mb-1">@Html.DisplayFor(model => model.Email)</p>
                            <p class="text-muted mb-4">@Html.DisplayFor(model => model.city)</p>
                            <div class="d-flex justify-content-center mb-2">

                                <input type="file" name="photo" class="btn btn-outline-primary ms-1">
                            </div>
                        </div>
                    </div>
       
                </div>
                <div class="col-lg-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Full Name</p>
                                </div>
                                <div class="col-sm-9">
                                    <div class="text-muted mb-0">
                                        @*@Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })*@
                                        <input class="form-control text-box single-line" id="fullName" name="fullName" type="text" value="@Model.fullName" required>
                                        @Html.ValidationMessageFor(model => model.fullName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Email</p>
                                </div>
                                <div class="col-sm-9">
                                    <div class="text-muted mb-0">
                                        @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })*@
                                        <input class="form-control text-box single-line" id="Email" name="Email" type="email" value="@Model.Email" required>
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Phone</p>
                                </div>
                                <div class="col-sm-9">
                                    <div class="text-muted mb-0">
                                        @*@Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })*@
                                        <input class="form-control text-box single-line" id="phone" name="phone" type="text" value="@Model.phone" required>
                                        @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <hr>

                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">City</p>
                                </div>
                                <div class="col-sm-9">
                                    <div class="text-muted mb-0">
                                        @*@Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })*@
                                        @*<input class="form-control text-box single-line" id="city" name="city" type="text" value="@Model.city">*@
                                        @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })


                                        @*<select class="form-control text-box single-line" id="city" name="city" value="@Model.city">

                                            <option value="Amman">Amman</option>
                                            <option value="Ajloun">Ajloun</option>
                                            <option value="Al Aqabah">Al Aqabah</option>
                                            <option value="Al Balqa">Al Balqa</option>
                                            <option value="Al Karak">Al Karak</option>
                                            <option value="Al Mafraq">Al Mafraq</option>
                                            <option value="At Tafilah">At Tafilah</option>
                                            <option value="Az Zarqa">Az Zarqa</option>
                                            <option value="Irbid">Irbid</option>
                                            <option value="Jarash">Jarash</option>
                                            <option value="Ma'an">Ma'an</option>
                                            <option value="Madaba">Madaba</option>
                                        </select>*@


                                        <select class="form-control" id="city" name="city" required>
                                            <option value="Amman" @if (Model.city == "Amman") { <text> selected</text>}>Amman</option>
                                            <option value="Ajloun" @if (Model.city == "Ajloun") { <text> selected</text>}>Ajloun</option>
                                            <option value="Al Aqabah" @if (Model.city == "Al Aqabah") { <text> selected</text>}>Al Aqabah</option>
                                            <option value="Al Balqa" @if (Model.city == "Al Balqa") { <text> selected</text>}>Al Balqa</option>
                                            <option value="Al Karak" @if (Model.city == "Al Karak") { <text> selected</text>}>Al Karak</option>
                                            <option value="Al Mafraq" @if (Model.city == "Al Mafraq") { <text> selected</text>}>Al Mafraq</option>
                                            <option value="At Tafilah" @if (Model.city == "At Tafilah") { <text> selected</text>}>At Tafilah</option>
                                            <option value="Az Zarqa" @if (Model.city == "Az Zarqa") { <text> selected</text>}>Az Zarqa</option>
                                            <option value="Irbid" @if (Model.city == "Irbid") { <text> selected</text>}>Irbid</option>
                                            <option value="Jarash" @if (Model.city == "Jarash") { <text> selected</text>}>Jarash</option>
                                            <option value="Ma'an" @if (Model.city == "Ma'an") { <text> selected</text>}>Ma'an</option>
                                            <option value="Madaba" @if (Model.city == "Madaba") { <text> selected</text>}>Madaba</option>

                                        </select>

                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-outline-primary ms-1" /> 
                                    @Html.ActionLink("Back to List", "UserProfile", new { @class = "btn btn-outline-primary ms-1" })
                                </div>
                                <div>
                                  
                                </div>

                            </div>

                          
                        </div>
                    </div>


                    <!--<div class="col-lg-8">
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-sm-3">
                                        <p class="mb-0">Full Name</p>
                                    </div>
                                    <div class="col-sm-9">-->
                    @*<p class="text-muted mb-0"> @Html.DisplayFor(model => model.Orders)</p>*@
                    <!--</div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">Email</p>
                        </div>
                        <div class="col-sm-9">-->
                    @*<p class="text-muted mb-0"> @Html.DisplayFor(model => model.Email)</p>*@
                    <!--</div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">Phone</p>
                        </div>
                        <div class="col-sm-9">-->
                    @*<p class="text-muted mb-0"> @Html.DisplayFor(model => model.phone)</p>*@
                    <!--</div>
                    </div>
                    <hr>

                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">City</p>
                        </div>
                        <div class="col-sm-9">-->
                    @*<p class="text-muted mb-0"> @Html.DisplayFor(model => model.city)</p>*@
                    <!--</div>
                                </div>
                            </div>
                        </div>


                    </div>-->
                </div>
            </div>
        </div>
       


    </section>
}

